#!/bin/bash
# IFRIT. Stands for: Incident Forensic Response In Terminal =)
# Official release 3.0 (19.05.2024)
# https://xakep.ru/2023/05/03/linux-incident-response/
# provided by Alex und Boris
# https://github.com/LazyAlpaka/ifrit
# –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç —Ä—É—Ç–∞ (sudo)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: chmod a+x ./ifrit.sh && ./ifrit.sh
# –ü—Ä–æ–±–ª–µ–º—ã –∫–æ–Ω—Ü–æ–≤ —Å—Ç—Ä–æ–∫ (bad interpreter) –ª–µ—á–∏–º —á–µ—Ä–µ–∑:
# sed -i -e 's/\r$//' ifrit.sh
# –ó–Ω–∞—á–∫–æ–º #! –Ω–∏–∂–µ –∑–∞–∫–æ–º–º–µ–Ω—á–µ–Ω–∞ —á–∞—Å—Ç—å –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Å–≤–æ–∏ –∫–µ–π—Å—ã

# –ó–∞–¥–∞—ë–º —Ü–≤–µ—Ç–Ω—É—é —Ä–∞—Å–∫—Ä–∞—Å–∫—É –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
# Set the color variable
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'
# Clear the color after that
clear='\033[0m'
# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: 
# printf "The script was exePRINTcuted ${green}successfully${clear}!"
# echo -e "The script was execuECHOted ${green}successfully${clear}"

echo -e "${red} _________________ _____ _____ ${clear}"
echo -e "${red}|_   _|  ___| ___ \_   _|_   _|${clear}"
echo -e "${red}  | | | |_  | |_/ / | |   | |  ${clear}"
echo -e "${red}  | | |  _| | ${magenta}üòà${clear}${red} /  | |   | |  ${clear}"
echo -e "${red} _| |_| |   | |\ \ _| |_  | |  ${clear}"
echo -e "${red} \___/\_|   \_| \_|\___/  \_/  ${clear}"
echo
echo -e "${yellow}Incident Forensic Response In Terminal ${clear}"
echo -e "${yellow}build 19.05.2024 ${clear}"

# –†–∞–∑—Ä–µ—à–∏–º —Å–∫—Ä–∏–ø—Ç—É –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Å –æ—à–∏–±–∫–∞–º–∏. –≠—Ç–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –¥–ª—è –æ—Å—Ç—Ä–∞—Å—Ç–∫–∏
set +e

# –ó–∞–¥–∞—ë–º –º–∞—Å—Å–∏–≤—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
#! –î–∞—Ç—ã –∏ –≤—Ä–µ–º—è –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è —Ñ–∞–π–ª–æ–≤ (–ø–æ—Ç–æ–º –∏—â–µ–º –∏—Ö –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∫–∞—Ç–∞–ª–æ–≥–∞—Ö)
startdate="2024-05-09 00:53:00"
enddate="2024-05-10 05:00:00" 


#! –ë—É–¥–µ–º –ª–∏ –ª—è –±—É–¥—É—â–µ–≥–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å—Ç–∞–≤–ª—è—Ç—å HISTTIMEFORMAT - —á—Ç–æ–±—ã –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –±—ã–ª–∏ –ø—Ä–æ–ø–∏—Å–∞–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
# –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é  - 0 
set_history=0

#! IP-–∞–¥—Ä–µ—Å–æ–≤, –∏—â–µ–º –≤ –ª–æ–≥–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π /usr /etc /var. –û—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ
#ips=("1.2.3.5" "6.7.8.9" )
ips=()

#! –¢–µ—Ä–º–∏–Ω–æ–≤\—Å–ª–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∫–∞—Ç–∞–ª–æ–≥–∞—Ö –∏ —Ñ–∞–π–ª–∞—Ö
# terms=("—Ç–µ—Ä–º–µ–Ω–≤–æ–∫—Å"  "1.2.3.4" )
terms=()

#! –ü–∞–ø–æ–∫ –∏ –ø—É—Ç–µ–π –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –º–µ—Å—Ç –∑–∞–ª–µ–≥–∞–Ω–∏—è
# –°–µ–π—á–∞—Å - Shishiga –∏ Rotajakiro
# iocfiles=()
iocfiles="/etc/rc2.d/S04syslogd
/etc/rc3.d/S04syslogd
/etc/rc4.d/S04syslogd
/etc/rc5.d/S04syslogd
/etc/init.d/syslogd
/bin/syslogd
/etc/cron.hourly/syslogd
/tmp/drop
/tmp/srv
$HOME/.local/ssh.txt
$HOME/.local/telnet.txt
$HOME/.local/nodes.cfg
$HOME/.local/check
$HOME/.local/script.bt
$HOME/.local/update.bt
$HOME/.local/server.bt
$HOME/.local/syslog
$HOME/.local/syslog.pid
$HOME/.dbus/sessions/session-dbus 
$HOME/.gvfsd/.profile/gvfsd-helper"

# –§–∏–∫—Å–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
start=$(date +%s)

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã root
echo -e "${magenta}[–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:]${clear}"
echo $(id -u -n)

# ¬´–ë–µ–∑ root –±—É–¥–µ—Ç –±–µ–¥–Ω–∞—è —Ñ–æ—Ä–µ–Ω–∑–∏–∫–∞¬ª
if (( $EUID != 0 )); then
# if [ $(id -u) -ne 0 ]; then
    echo -e "${red}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ root${clear}"
fi  

# –î–µ–ª–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç —Å–∫—Ä–∏–ø—Ç–∞)
if [ -z $1 ]; then
    part1=$(hostname) # –ò–º—è —Ö–æ—Å—Ç–∞
    echo -e "${magenta}–ù–∞—à —Ö–æ—Å—Ç: $part1 ${clear}"
    time_stamp=$(date +%Y-%m-%d-%H.%M.%S) # –ë–µ—Ä–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    curruser=$(whoami) # –¢–µ–∫—É—â–∏–π —é–∑–µ—Ä
    saveto="./${part1}_${curruser}_$time_stamp" # –ò–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
else
   saveto=$1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–µ–µ
mkdir -pv $saveto
cd $saveto

# –°–æ–∑–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç—Ä–∏–∞–∂-—Ñ–∞–π–ª–æ–≤
mkdir -p ./artifacts

# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å –ª–æ–≥ –≤ —Ñ–∞–π–ª
	# –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é  UTF-8
    # –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
	# echo "–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è"
	# –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø –≤ –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–π –ª–æ–≥
	# echo "–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è" >> <—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª>
	# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã –≤ –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–π –ª–æ–≥
    # <–≤—ã–ø–æ–ª–Ω—è–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞> >> <—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª>
	# –í—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–π –ª–æ–≥-—Ñ–∞–π–ª –¥–ª—è —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
	# echo -e "\n" >> <—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª>
	# UPDATE 27.05.2023
	# –§–æ—Ä–º–∞—Ç —Ç–æ—Ç –∂–µ, –Ω–æ –≤–º–µ—Å—Ç–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö >> >> –¥–µ–ª–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ —á–µ—Ä–µ–∑ {}>> (–≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ)
	
{

#### –≠—Ç–æ –±—ã–ª–æ –≤–µ—Å–µ–ª–æ, –Ω–æ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –Ω–∏–∫—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª, –ø–æ—ç—Ç–æ–º—É –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É—é 10.05.2024
#### –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ö–µ—à –¥–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞, –Ω–∞—á–∏–Ω–∞—è —Å 135 —Å—Ç—Ä–æ—á–∫–∏, –∏ –¥–æ –∫–æ–Ω—Ü–∞ —Å —ç—Ç–∞–ª–æ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
#### from 135 line till end
###echo "–ü—Ä–æ–≤–µ—Ä–∏–º —Å–≤–æ—é —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å..."
###SCRIPTPATH=$(realpath -s "../$0")
###tail -n+135 $SCRIPTPATH > thsh.txt
###currhash=$(md5sum thsh.txt | awk '{print $1}')
#### —á—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å tarhash, –∏—Å–ø–æ–ª—å–∑—É–π –¥–≤–µ –≤–µ—Ä—Ö–Ω–∏—Ö —Å—Ç—Ä–æ—á–∫–∏ –Ω–∞ —ç—Ç–∞–ª–æ–Ω–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ, –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π —Ç–µ–∫—É—â–∏–π —Ö–µ—à –∏–∑ –≤—ã–≤–æ–¥–∞ –∫–æ–Ω—Å–æ–ª–∏
###tarhash="aa458f9ca0233151337faf9b7b63c16e" #! 27052023, 135 line+
###echo $currhash
###echo $tarhash
###if [ "$currhash" = "$tarhash" ]; then
###    echo -e "${green}Hashes are equal! Continue... ${clear} \n" 
###else
###    echo -e "${red}Invalid hashes! Be careful!${clear} \n" 
###fi
###rm thsh.txt

# ----------------------------------
# ----------------------------------
# –°–ë–û–† –î–ê–ù–ù–´–• –û –•–û–°–¢–ï

# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª host_info >>>
#echo -n > host_info
echo -e "${magenta}[–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ö–æ—Å—Ç—É]${clear}" 
{
echo "[–¢–µ–∫—É—â–∏–π —Ö–æ—Å—Ç –∏ –≤—Ä–µ–º—è]"  
echo "–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è:" 
date 
echo -e "\n" 

echo "[–ò–º—è —Ö–æ—Å—Ç–∞:]" 
hostname 
echo -e "\n" 

echo "[DNS/FQDN:]" 
dnsdomainname 2>/dev/null
echo -e "\n" 

# –°–≤–µ–¥–µ–Ω–∏—è –æ —Ä–µ–ª–∏–∑–µ –û–°, –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–∑ —Ñ–∞–π–ª–∞ os-release
# –ê–Ω–∞–ª–æ–≥–∏: cat /usr/lib/os-release –∏–ª–∏ lsb_release
echo "[–î–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –∏–∑ etc/*(-release|_version)]" 
cat /proc/version 2>/dev/null
echo -e "\n" 
more /etc/*release | cat 
more /etc/*version | cat 
echo -e "\n" 

# –î–ª—è —Å–ø—Ä–∞–≤–∫–∏:
#–í—ã–≤–µ—Å—Ç–∏ –Ω–µ–ø—É—Å—Ç—ã–µ –∏ –Ω–µ–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å—Ç—Ä–æ—á–∫–∏ 
# grep -v '^#' /file | grep -P '\S'

echo "[–î–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –∏–∑ /etc/issue]" 
cat /etc/issue 
echo -e "\n" 

echo "[–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ö–æ—Å—Ç–∞ (hostid)]" 
hostid 
echo -e "\n" 

echo "[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ hostnamectl]" 
hostnamectl 
echo -e "\n" 

echo "[IP –∞–¥—Ä–µ—Å(–∞):]" 
ip addr  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º IP-–∞–¥—Ä–µ—Å–µ
echo -e "\n" 

echo "[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ]" 
uname -a 
echo -e "\n" 

echo "[–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:]" 
# whoami
who am i 
echo -e "\n" 

echo "[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å—è—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö]"
for name in $(ls /home); do
    id $name  
done
echo -e "\n" 


} >> host_info

# –ü–æ–ª—É—á–∏–º —Å–ø–∏—Å–æ–∫ –∂–∏–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ó–∞—á–∞—Å—Ç—É—é –º—ã —Ö–æ—Ç–∏–º –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∫–∞—Ç–∞–ª–æ–≥–∏, —á—Ç–æ–±—ã –≤ –Ω–∏—Ö –ø–æ—Ä—ã—Ç—å—Å—è. –ó–∞–ø–∏—à–µ–º –∏–º–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏

echo -e "${magenta}[–ê–Ω–∞–ª–∏–∑ –±–∞–∑—ã]${clear}" 
{
echo "[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å /home/:]"  
ls /home 
# –ò—Å–∫–ª—é—á–∞–µ–º –ø–∞–ø–∫—É lost+found
users=`ls /home -I lost*`
#echo $users
echo -e "\n" 

echo "[–ó–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã–µ —é–∑–µ—Ä—ã:" 
w 
echo -e "\n" 
who --all 2>/dev/null 
echo -e "\n" 
} >> host_info

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª host_info
# ----------------------------------
# ----------------------------------

# –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ—á–∫—É, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø–∞—É–∑—É –∏ —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–∫—É—à–∞—Ç—å. –ó–∞—Ç–µ–º –Ω–∞–∂–º–∏ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
# read -p "Press [Enter] key to continue fetch..."
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ–∞–π–ª—ã

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª users_files >>>

echo -e "${magenta}[–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏ –ø—Ä–∞–≤–∞—Ö, —Ñ–∞–π–ª–∞—Ö]${clear}"

#echo -e "${magenta}[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ–∞–π–ª—ã]${clear}"

{

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
# –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –æ LDAP-–Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
echo "[–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]"; 

echo "[AD_cfg_info]"; 
cat /etc/sssd/sssd.conf 2>/dev/null
echo -e "\n" 

echo "[/etc/passwd]"; 
cat /etc/passwd  ;
echo -e "\n" 

echo "[/etc/group]"; 
cat /etc/group ; 
echo -e "\n" 

echo "[/home/users & passwd]"; 
# –ò–∑ –ø–∞–ø–∫–∏ home –∑–∞–±–∏—Ä–∞–µ–º –∂–∏–≤—ã—Ö –¥–æ–º–µ–Ω–Ω—ã—Ö —é–∑–µ—Ä–æ–≤ (—Å @), –æ–±—ã—á–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö —é–∑–µ—Ä–æ–≤, –∏ –¥–æ–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–∫–æ–º –∏–∑ /etc/passwd
for name in $( ls -d /home/*/ | grep -oP '(?<=/home/).*?(?=@)' || ls -d /home/*/ | grep -oP '(?<=/home/).*?(?=/)' | grep -v '@' &&  cat /etc/passwd | cut -d: -f1 | uniq | sort); do   
echo "[id_$name ]"; 
id $name 2>&1;
echo -e "\n" ;
echo "[last_$name ]" ; 
# –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤—Ö–æ–¥—ã
last $name;   
echo -e "\n" ;
echo "[sudo for $name ]" ;  
# –º–æ–∂–µ—Ç –ª–∏ —ç—Ç–æ—Ç —é–∑–µ—Ä –≤ SUDO
sudo -l -U $name 2>&1;
echo -e "\n" ; 
done;


echo "[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑ (Downloads,Documents, Desktop)]" 
ls -lta /home/*/Downloads 2>/dev/null 
echo -e "\n" 
ls -lta /home/*/–ó–∞–≥—Ä—É–∑–∫–∏ 2>/dev/null 
echo -e "\n" 
ls -lta /home/*/Documents 2>/dev/null 
echo -e "\n" 
ls -lta /home/*/–î–æ–∫—É–º–µ–Ω—Ç—ã 2>/dev/null 
echo -e "\n" 
ls -lta /home/*/Desktop/ 2>/dev/null 
echo -e "\n" 
ls -lta /home/*/–†–∞–±–æ—á–∏–π\ —Å—Ç–æ–ª/ 2>/dev/null 
echo -e "\n" 

# –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
echo "[–§–∞–π–ª—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ –∏–∑ home]" 
ls -ltaR /home/*/.local/share/Trash/files 2>/dev/null 
echo -e "\n" 

# –î–ª—è —Ä—É—Ç–∞ —Ç–æ–∂–µ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
echo "[–§–∞–π–ª—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ –∏–∑ root]" 
ls -ltaR /root/.local/share/Trash/files 2>/dev/null 
echo -e "\n" 

# –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å
echo "[–ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º –∏–∑ home]" 
ls -lta /home/*/.thumbnails/ 2>/dev/null 
echo -e "\n" 

} >> users_files

# –ò—â–µ–º –≤ –¥–æ–º–∞—à–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞–ø–∫–∞—Ö
#! grep -C2 -rn '—Ç–µ—Ä–º–µ–Ω–≤–æ–∫—Å' --exclude="*ifrit.sh" --exclude-dir=$saveto /home/* 2>/dev/null >> ioc_word_info

#! –ò—â–µ–º –ª–∞–∫–æ–º—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –≤ –¥–æ–º–∞—à–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞–ø–∫–∞—Ö
echo -e "${magenta}[–ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞... ]{$clear}"

for f in ${terms[@]};
do
    echo "Search $f" 
    echo -e "\n" >> ioc_word_info
    grep -C2 -rn $f --exclude="*ifrit.sh" --exclude-dir=$saveto /home/* 2>/dev/null >> ioc_word_info
done


#! echo "[–ü–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –≤ –ø–∞–ø–∫–∞—Ö home –∏ root:]" >> users_files
#! find /root /home -type f -name \*.exe -o -name \*.jpg -o -name \*.bmp -o -name \*.png -o -name \*.doc -o -name \*.docx -o -name \*.xls -o -name \*.xlsx -o -name \*.csv -o -name \*.odt -o -name \*.ppt -o -name \*.pptx -o -name \*.ods -o -name \*.odp -o -name \*.tif -o -name \*.tiff -o -name \*.jpeg -o -name \*.mbox -o -name \*.eml 2>/dev/null >> users_files
#! echo -e "\n" >> users_files

# –ò—â–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (–Ω–æ –Ω–µ –≤ /var/log)
#! echo "[–í–æ–∑–º–æ–∂–Ω—ã–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (—Å –∏–º–µ–Ω–µ–º –∏–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º *log*)]"
#! find /root /home /bin /etc /lib64 /opt /run /usr -type f -name \*log* 2>/dev/null >> int_files_info

# –ò—â–µ–º –≤ –¥–æ–º–∞—à–Ω–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ —Ñ–∞–π–ª—ã —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ–º) –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
#! echo "[–ò—â–µ–º –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –æ—Ç ${startdate} –¥–æ ${enddate}]"
# –ø—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞:
# find /home/* -type f -newermt "2023-02-24 00:00:11" \! -newermt "2023-02-24 00:53:00" -ls >> int_files_info
#! find /home/* -type f -newermt "${startdate}" \! -newermt "${enddate}" -ls >> int_files_info
# –µ—â—ë –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:
# find -newerct "10 May 2024 05:00:00" ! -newerct "10 May 2024 11:00:00" -ls | sort

echo -e "${green}[–¢–∞–π–º–ª–∞–π–Ω —Ñ–∞–π–ª–æ–≤ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∫–∞—Ç–∞–ª–æ–≥–∞—Ö (CSV)]${clear}"
{
echo "file_location_and_name, date_last_Accessed, date_last_Modified, date_last_status_Change, owner_Username, owner_Groupname,sym_permissions, file_size_in_bytes, num_permissions" 
echo -n 
find /home /root -type f -printf "%p,%A+,%T+,%C+,%u,%g,%M,%s,%m\n" 2>/dev/null 

# –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç –≤–∞—Ä–∏–∞–Ω—Ç:
# find /home /root -xdev -print0 | xargs -0 stat --printf="%i,%h,%n,%x,%y,%z,%w,%U,%G,%A,%s\n" 2>/dev/null


} >> users_files_timeline

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª users_files
# ----------------------------------
# ----------------------------------

# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª apps_file >>>

echo -e "${magenta}[–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ]${clear}"

{

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (—Å —É—á—ë—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∞—Å—Ç—Ä–æ–≤—Å–∫–∏—Ö –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)
echo "[Installed apps with GUI]" 
ls /usr/share/applications | awk -F '.desktop' ' { print $1}' - | grep -v -e "fly" -e "org" -e "okularApplication"
echo -e "\n" 

# –î–ª—è –∞—Å—Ç—Ä—ã –≤—ã–≤–æ–¥–∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∏—Å–∫–ª—é—á–∞—è —Å–∏—Å—Ç–µ–º–Ω—ã–π –º—É—Å–æ—Ä
echo "[Apps ls -lta /usr/share/applications]"
#ls -lta /usr/share/applications 
#ls -la /home/*/.local/share/applications/ 
ls /usr/share/applications | awk -F '.desktop' ' { print $1}' - | grep -v -e fly -e org -e okularApplication 
echo -e "\n" 


echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤]" 
# Firefox, –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: ~/.mozilla/firefox/*, ~/.mozilla/firefox/* –∏ ~/.cache/mozilla/firefox/*
firefox --version 2>/dev/null 
# Firefox, –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
dpkg -l | grep firefox 
# Thunderbird. –ú–æ–∂–Ω–æ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –∫–æ–º–∞–Ω–¥–æ–π ls -lta ~/.thunderbird/*, –ø–æ–∏—Å–∫–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –ø–µ—Ä–µ–ø–∏—Å–∫—É
thunderbird --version 2>/dev/null 
# Chromium. –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã:  ~/.config/chromium/*
chromium --version 2>/dev/null 
# Google Chrome. –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –∏–∑ ~/.cache/google-chrome/* –∏ ~/.cache/chrome-remote-desktop/chrome-profile/
chrome --version 2>/dev/null 
# Opera. –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã ~/.config/opera/*
opera --version 2>/dev/null 
# Brave. –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: ~/.config/BraveSoftware/Brave-Browser/*
brave --version 2>/dev/null 
# –ë–µ—Ç–∞ –Ø–Ω–¥–µ–∫—Å-–±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è Linux. –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: ~/.config/yandex-browser-beta/*
yandex-browser-beta --version 2>/dev/null 
echo -e "\n" 


# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–æ–≤
# xdg-mime query default application/xml 2>/dev/null
# Get part of registered apps, associated with mime types
#grep 'MimeType' /usr/share/applications/*.desktop | tr ';' '\n'
echo "[Desktop files props (short)]"
for dfile in $(ls /usr/share/applications/*.desktop); do
	echo $dfile
	cat $dfile | grep Name=
	cat $dfile | grep GenericName=
	cat $dfile | grep Comment=
	cat $dfile | grep Exec=
	cat $dfile | grep MimeType=
	echo -e "\n"  
done



# –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã –∏ –ö–æ
echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π]" 
signal-desktop --version 2>/dev/null 
viber --version 2>/dev/null 
whatsapp-desktop --version 2>/dev/null 
tdesktop --version 2>/dev/null 
# –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥: ls -lta ~/.zoom/*
zoom --version 2>/dev/null 
# –ú–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∫–∞—Ç–∞–ª–æ–≥: ls -lta ~/.steam
steam --version 2>/dev/null 
discord --version 2>/dev/null 
dropbox --version 2>/dev/null 
yandex-disk --version 2>/dev/null 
echo -e "\n" 

# –ü–æ—Å–º–æ—Ç—Ä–∏–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
# get browsers plugins/extensions
echo "[Get list of browsers extensions per user]"

# ! you can add your best favorite browser Extension path
browser_ext_paths="
.config/google-chrome/*/Extensions
.config/yandex-browser/Default/Extensions
.config/chromium/Default/Extensions
.config/BraveSoftware/Brave-Browser/Defaults/Extensions
.config/opera/Default/Extensions/
"

# check browser extensions
for usa in $(ls /home); do
for ext_p in $browser_ext_paths; do
for i in $(find /home/$usa/$ext_p -name 'manifest.json' 2>/dev/null); do
  n=$(grep -hIr name $i| cut -f4 -d '"'| sort)
  update=$(jq ".update_url" $i)
  ue=$(basename $(dirname $(dirname $i)))
  au=$(grep -hIr author $i| cut -f4 -d '"'| sort)
  echo -e "[$usa $(echo $ext_p | cut -d "/" -f 2) extensions:]\n"
  echo -e "Name: $n"
  echo -e "Author: $au"
  echo -e "ID: $ue"
  echo -e "Update URL: $update"
  echo -e "\n" 
done
done
done


# python packages
echo "[Python packages]"
pip list 2>/dev/null
echo -e "\n" 

# pip3 packages
pip3 list 2>/dev/null
echo -e "\n" 


} >> apps_file

echo -e "${magenta}[–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ –≤ –ø–∞–ø–∫—É ./artifacts]${clear}"

{
echo "[–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ –≤ –ø–∞–ø–∫—É ./artifacts]" 
mkdir -p ./artifacts/mozilla
cp -r /home/*/.mozilla/firefox/ ./artifacts/mozilla 2>/dev/null
mkdir -p ./artifacts/gchrome
cp -r /home/*/.config/google-chrome* ./artifacts/gchrome 2>/dev/null
mkdir -p ./artifacts/chromium
cp -r /home/*/.config/chromium ./artifacts/chromium 2>/dev/null
mkdir -p ./artifacts/brave
# maybe ~/.local/share/brave/Brave-browser
cp -r /home/*/.config/Brave* ./artifacts/brave 2>/dev/null
mkdir -p ./artifacts/opera
cp -r /home/*/.config/opera* ./artifacts/opera 2>/dev/null
mkdir -p ./artifacts/yandex
cp -r /home/*/.config/yandex* ./artifacts/yandex 2>/dev/null

# remove empty folders
find ./artifacts/ -maxdepth 1 -empty -type d -delete


echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Ç–æ—Ä—Ä–µ–Ω—Ç–∞]"  
apt list --installed 2>/dev/null | grep torrent  
echo -e "\n" 


echo "[–í—Å–µ –ø–∞–∫–µ—Ç—ã, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ]"  
# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ APT; —Ç–∞–∫–∂–µ –ø–æ–ø—Ä–æ–±—É–π dpkg -l
apt list --installed 2>/dev/null 
echo -e "\n" 


# –°–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ dpkg
echo "[dpkg - installed apps]" 2>/dev/null 
dpkg --get-selections 
echo -e "\n" 

# –°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é
echo "[–í—Å–µ –ø–∞–∫–µ—Ç—ã, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ (–≤—Ä—É—á–Ω—É—é)]"  
apt-mark showmanual 2>/dev/null 
echo -e "\n" 

echo "[–í—Å–µ –ø–∞–∫–µ—Ç—ã, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ (–≤—Ä—É—á–Ω—É—é, –≤–∞—Ä. 2)]"  
# fixed for Russ'ian language
apt list --manual-installed 2>/dev/null | grep -F -e \[—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\] -e \[installed\]

echo -e "\n" 


# –ö–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç, –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å aptitude search '!~M ~i' –∏–ª–∏ aptitude search -F %p '~i!~M'
# –î–ª—è openSUSE, ALT, Mandriva, Fedora, Red Hat, CentOS
rpm -qa --qf "(%{INSTALLTIME:date}): %{NAME}-%{VERSION}\n" 2>/dev/null 
echo -e "\n" 
# –î–ª—è Fedora, Red Hat, CentOS
yum list installed 2>/dev/null 
echo -e "\n" 
# –î–ª—è Fedora
dnf list installed 2>/dev/null 
echo -e "\n" 
# –î–ª—è Arch
pacman -Q 2>/dev/null 
echo -e "\n" 
# –î–ª—è openSUSE
zypper info 2>/dev/null 
echo -e "\n" 
echo -e "\n" 

# –ü–æ—Å—Ç–∞–≤–∏–ª –≤ –∫–æ–Ω–µ—Ü, —á—Ç–æ–±—ã –Ω–µ –º—É—Å–æ—Ä–∏–ª–æ
# get firefox extensions list
echo "[Firefox browser extensions for all ]"
more /home/*/.mozilla/firefox/*.default-release/extensions.json 2>/dev/null | cat
echo -e "\n" 

# get thunderbird extensions list
echo "[Thunderbird extensions for all users]"
more /home/*/.thunderbird/*.default-release/extensions.json 2>/dev/null| cat
echo -e "\n" 



} >> apps_file


# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª apps_file
# ----------------------------------
# ----------------------------------


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∞—É–¥–∏—Ç, SELinux, AppArmor –∏ Kerberos)
echo -e "${magenta}[–ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏]${clear}"
# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª secur_cfg >>>
{

# –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è LDAP/Kerberos-—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π
echo "[Kerberos check]" 
klist 2>/dev/null
echo -e "\n" 
klist -k -Ke 2>/dev/null
echo -e "\n" 
cat /etc/krbr5.* 2>/dev/null
echo -e "\n" 
ls /tmp | grep krb 2>/dev/null
echo -e "\n" 

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞ SSH
echo "[SSH config check]"
cat /etc/ssh/sshd_config 2>/dev/null
echo -e "\n" 


# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è syslog-ng, rsyslog, syslogd,audispd
echo "[Syslog-ng conf]"  
more /etc/syslog-ng/*.conf 2>/dev/null | cat
echo -e "\n" 
echo "[Syslog conf]" 
cat /etc/syslog.conf 2>/dev/null
echo -e "\n" 
echo "[rsyslog conf]" 
cat /etc/rsyslog.conf 2>/dev/null
echo -e "\n" 
more /etc/rsyslog.d/*.conf 2>/dev/null | cat
echo -e "\n" 
echo "[audispd conf]" 
cat /etc/audit/plugins.d/syslog.conf 2>/dev/null 
echo -e "\n" 
cat /etc/audisp/plugins.d/syslog.conf 2>/dev/null 
echo -e "\n" 

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª –∞—É–¥–∏—Ç–∞ - —Å–∞–º –∫–æ–Ω—Ñ–∏–≥ –∏ –ø—Ä–∞–≤–∏–ª–∞ –∞—É–¥–∏—Ç–∞? + –ø–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –ø–æ —Ñ–∞–∫—Ç—É
echo "[auditd conf]" 
cat /etc/audit/auditd.conf 2>/dev/null
echo -e "\n" 
more /etc/audit/rules.d/* 2>/dev/null | cat
echo -e "\n" 
cat /etc/audit/audit.rules 2>/dev/null
echo -e "\n" 
echo "[auditd loaded rules]" 
auditctl -l 2>/dev/null
echo -e "\n" 

# SE linux –ø—Ä–æ–≤–µ—Ä–∫–∏
echo "[SE linux status check]"  
sestatus 2>/dev/null
echo -e "\n" 
getenforce 2>/dev/null
echo -e "\n" 
cat /etc/selinux/config 2>/dev/null
echo -e "\n" 
sudo semodule ‚Äìl 2>/dev/null
echo -e "\n" 
getsebool -a 2>/dev/null
echo -e "\n" 
semanage boolean ‚Äìl 2>/dev/null
echo -e "\n" 



echo "[Apparmor checks]"  
# APP armor checks
apparmor_status 2>/dev/null
echo -e "\n" 
aa-status 2>/dev/null
echo -e "\n" 
ls -d /etc/apparmor* 2>/dev/null
echo -e "\n" 
more /etc/apparmor.d/*  2>/dev/null | cat
echo -e "\n" 

echo "[Netstat and ps with extended security attributes (try)]"  
netstat ‚ÄìanpZ 2>/dev/null
echo -e "\n"
ps auxZe 2>/dev/null
echo -e "\n"

} >> secur_cfg


# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª secur_cfg
# ----------------------------------
# ----------------------------------

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –∏–∑–≤—Ä–∞—Ç–æ–≤ –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤ –º–µ—Å—Ç –∑–∞–ª–µ–≥–∞–Ω–∏—è

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª virt_apps_file >>>

echo -e "${magenta}[–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ —ç–º—É–ª—è—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ GRUB]${clear}"

{
echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Virtualbox]"  
apt list --installed  2>/dev/null | grep virtualbox 
echo -e "\n" 

echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ KVM (guest OS)]"  
virsh list --all 2>/dev/null 
echo -e "\n" 

# –ê –≤–æ—Ç —Ç–∞–∫ –º–æ–∂–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ QEMU, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω
echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ QEMU]"  
more /home/*/.cache/libvirt/qemu/log/* 2>/dev/null | cat 
echo -e "\n" 

echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π Wine]"  
# –∏–Ω–æ–≥–¥–∞ wine –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–¥–µ—Å—å –∫–æ–Ω—Ñ–∏–≥...
winetricks list-installed 2>/dev/null 
winetricks settings list 2>/dev/null 
ls -lta /home/*/.wine/drive_c/program_files 2>/dev/null 
ls -lta /home/*/.wine/drive_c/Program 2>/dev/null 
ls -lta /home/*/.wine/drive_c/Program\ Files/ 2>/dev/null 
ls -lta /home/*/.wine/drive_c/Program/ 2>/dev/null 
echo -e "\n" 

echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–∏]" 
# –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã Docker: /var/lib/docker/containers/*/
docker --version 2>/dev/null 

# –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –≤–æ–∑—å–º–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker list 2>/dev/null 
# –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã containerd : /etc/containerd/* –∏ /var/lib/containerd/
containerd --version 2>/dev/null 
echo -e "\n" 

echo "[–í—ã–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ –º–µ–Ω—é, —Ç–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –û–° (GRUB)]"  
awk -F\' '/menuentry / {print $2}' /boot/grub/grub.cfg 2>/dev/null 
echo -e "\n" 

echo "[–ö–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª GRUB]"  
cat /boot/grub/grub.cfg 2>/dev/null 
echo -e "\n" 

echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã—Ö –û–°]"  
os-prober  2>/dev/null
echo -e "\n" 

echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–±–æ—Ä–æ–∫ —è–¥—Ä–∞]"
ls /boot | grep vmlinuz-
echo -e "\n" 
} >> virt_apps_file

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª virt_apps_file
# ----------------------------------
# ----------------------------------

# –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤–µ

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª history_info >>>

echo -e "${yellow}[–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è]${clear}"

{
# –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞ 1, 5 –∏ 15 –º–∏–Ω
echo "[–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]" 
uptime 
echo -e "\n" 

echo "[–ñ—É—Ä–Ω–∞–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–æ–∫ (last -x reboot)]" 
last -x reboot 
echo -e "\n" 

echo "[–ñ—É—Ä–Ω–∞–ª –≤—ã–∫–ª—é—á–µ–Ω–∏–π (last -x shutdown)]" 
last -x shutdown 
echo -e "\n" 

# –°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤—Ö–æ–¥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º—É —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –¥–∞—Ç—ã (/var/log/lastlog)
echo "[–°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤—Ö–æ–¥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º—É (/var/log/lastlog)]" 
lastlog 
echo -e "\n" 

# –°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã—Ö —é–∑–µ—Ä–æ–≤ (/var/log/wtmp), –∏—Ö —Å–µ—Å—Å–∏–π, —Ä–µ–±—É—Ç–æ–≤ –∏ –≤–∫–ª—é—á–µ–Ω–∏–π –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–π
echo "[–°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã—Ö —é–∑–µ—Ä–æ–≤ —Å –¥–µ—Ç–∞–ª—è–º–∏ (/var/log/wtmp)]" 
last -Faiwx 
echo -e "\n" 

echo "[–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ fc —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]" 
fc -li 1 2>/dev/null 
# history -a
echo -e "\n" 
# –ê–Ω–∞–ª–æ–≥ –∫–æ–º–∞–Ω–¥—ã history, –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–º–∞–Ω–¥, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
echo "[–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ fc —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–µ—Ä. 2)]" 
fc -l 1 
echo -e "\n" 

# –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥ –í –Ω—É–∂–Ω–æ–º –Ω–∞–º —Ñ–æ—Ä–º–∞—Ç–µ.
# —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –≤ —Ñ–∞–π–ª–µ history –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ HISTTIMEFORMAT –∑–∞—Ç–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º.
# –û–¥–Ω–∞–∫–æ, –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å—Ä–∞–±–æ—Ç–∞—é—Ç –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å–∏–∏, –Ω–æ –Ω–µ –≤ –¥–∞–Ω–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ.
#echo "[Glory history get]" 
#echo "HISTTIMEFORMAT: $HISTTIMEFORMAT"
#echo -e "\n" 
#hist_before=$HISTTIMEFORMAT && export HISTTIMEFORMAT="[%s %d-%m-%Y %H:%M:%S %Z] " && history && unset HISTTIMEFORMAT && HISTTIMEFORMAT=$hist_before
#echo -e "\n" 


# –ù–∞–ø—Ä–∏–º–µ—Ä, .nano_history,mysql_history –∏—Ç–¥
if ls /root/.*_history >/dev/null 2>&1; then
    echo "[–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ—è Root (/root/.*history)]" 
    more /root/.*history | cat 
	echo -e "\n" 
	# –î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –ø–æ–≤–µ—Ä—à–µ–ª–ª–∞ - –∏—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥ powershell
	more /root/.local/share/powershell/PSReadline/* 2>/dev/null | cat
	echo -e "\n" 
fi

for name in $(ls /home); do
	# –ó–¥–µ—Å—å –∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –Ω–∞—à—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é $users (–Ω–æ —è –Ω–µ –∑–∞—Ö–æ—Ç–µ–ª)
	echo "[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ—è ${name} (chage)]"
	chage ‚Äìl $name 2>/dev/null
	echo -e "\n" 
    echo "[–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ—è ${name} (.*history)]" 
    more /home/$name/.*history 2>/dev/null | cat    
    echo -e "\n" 
	#echo "[–ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥ Python –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ—è ${name}]" 
	#more /home/$name/.python_history 2>/dev/null | cat 
	#echo -e "\n" 
	# –î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –ø–æ–≤–µ—Ä—à–µ–ª–ª–∞ - –∏—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥ powershell
	more /home/$name/.local/share/powershell/PSReadline/* 2>/dev/null | cat
	echo -e "\n" 
done

# –ò—Å—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –≥—Ä–µ–ø–∞—Ç—å –≤ —Ñ–∞–π–ª–∞—Ö /var/log/dpkg.log*, –Ω–∞–ø—Ä–∏–º–µ—Ä
echo "[–ò—Å—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏–∑ /var/log/dpkg.log]" 
grep "install " /var/log/dpkg.log 
echo -e "\n" 

# –ò—Å—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ –≤ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –ª–æ–≥–∞—Ö. –î–ª—è –ø–æ–∏—Å–∫–∞ –≤–æ –≤—Å–µ—Ö –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–∞—Ö –∏—Å–ø—Ä–∞–≤—å dpkg.log –Ω–∞ *
echo "[–ê—Ä—Ö–∏–≤ –∏—Å—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏–∑ /var/log/dpkg.log.gz ]" 
zcat /var/log/dpkg.log.gz 2>/dev/null | grep "install " 
echo -e "\n" 

echo "[–ò—Å—Ç–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏–∑ /var/log/dpkg.log]" 
grep "upgrade " /var/log/dpkg.log 
echo -e "\n" 

echo "[–ò—Å—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏–∑ /var/log/dpkg.log]" 
grep "remove " /var/log/dpkg.log 
echo -e "\n" 

echo "[–ò—Å—Ç–æ—Ä–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö apt-–¥–µ–π—Å—Ç–≤–∏—è—Ö (history.log)]" 
cat /var/log/apt/history.log 
echo -e "\n" 

# –î–æ–ø —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–± –∏–º–µ–µ—Ç —Å–º—ã—Å–ª –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
#/var/log/dpkg.log*;
#/var/log/apt/history.log*;
#/var/log/apt/term.log*;
#/var/lib/dpkg/status.
} >> history_info 

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª history_info
# ----------------------------------
# ----------------------------------

# –°–µ—Ç–µ–≤–∏—á–æ–∫ (—Å–µ—Ç–µ–≤–∞—è —á–∞—Å—Ç—å)

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª network_info >>>

echo -e "${blue}[–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏]${clear}"

{
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–µ–≤—ã—Ö –∞–¥–∞–ø—Ç–µ—Ä–∞—Ö. –ê–Ω–∞–ª–æ–≥–∏: ip l –∏ ifconfig -a
echo "[IP –∞–¥—Ä–µ—Å(–∞):]" 
ip a 
echo -e "\n" 

echo "[–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏]" 
ifconfig -a 2>/dev/null 
echo -e "\n" 

echo "[–ú–∞—Ä—à—Ä—É—Ç—ã –∏ –ø—Ä–∞–≤–∏–ª–∞ IPv4/v6]" 
# routing tables and rules
ip -4 route ls 2>/dev/null 
ip -4 rule ls 2>/dev/null 
echo -e "\n" 
ip -6 route ls 2>/dev/null 
ip -6 rule ls 2>/dev/null 
echo -e "\n" 


echo "[–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã (–∫–æ–Ω—Ñ–∏–≥–∏)]" 
cat /etc/network/interfaces 2>/dev/null
echo -e "\n" 
more /etc/network/interfaces.d/* 2>/dev/null| cat
echo -e "\n" 
cat /etc/sysconfig/network 2>/dev/null
echo -e "\n" 

echo "[–ù–∞—Å—Ç—Ä–æ–π–∫–∏ DNS]" 
cat /etc/resolv.conf 
cat /etc/host.conf    2>/dev/null 
echo -e "\n" 

echo "[–°–µ—Ç–∏:]" 
cat /etc/networks 2>/dev/null
echo -e "\n" 


echo "[–°–µ—Ç–µ–≤–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä (nmcli)]" 
nmcli 2>/dev/null
echo -e "\n" 

echo "[–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ —Å–µ—Ç–∏ (iwconfig)]" 
iwconfig 2>/dev/null 
echo -e "\n" 

echo "[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ hosts (local DNS)]" 
cat /etc/hosts 
echo -e "\n" 

echo "[–°–µ—Ç–µ–≤–æ–µ –∏–º—è –º–∞—à–∏–Ω—ã (hostname)]" 
cat /etc/hostname 
echo -e "\n" 

echo "[–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ VPN –∫–ª—é—á–∏]" 
ip xfrm state list 
echo -e "\n" 

echo "[ARP —Ç–∞–±–ª–∏—Ü–∞]" 
arp -e 2>/dev/null 
# ip n 2>/dev/null 
echo -e "\n" 

echo "[–¢–∞–±–ª–∏—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏]" 
ip r 2>/dev/null 
# route 2>/dev/null 
echo -e "\n" 

echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏]" 
echo "$http_proxy" 
echo -e "\n" 
echo "$https_proxy"
echo -e "\n" 
env | grep proxy 
echo -e "\n" 

echo "[–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞]" 
ping -c2 google.com
echo -e "\n" 
echo "[–í–Ω–µ—à–Ω–∏–π IP-–∞–¥—Ä–µ—Å]" 
wget -T 2 -O- https://api.ipify.org 2>/dev/null 
#| tee -a network_info
echo -e "\n" 
# –ê–Ω–∞–ª–æ–≥:
curl ifconfig.co 2>/dev/null
# https://xakep.ru/2016/09/08/19-shell-scripts/ 
echo -e "\n" 

# –ë–∞–∑–∞ –∞—Ä–µ–Ω–¥ DHCP-—Å–µ—Ä–≤–µ—Ä–∞ (—Ñ–∞–π–ª—ã dhcpd.leases). –ì–ª–∞–º—É—Ä–Ω—ã–π –∞–Ω–∞–ª–æ–≥ ‚Äî —É—Ç–∏–ª–∏—Ç–∞ dhcp-lease-list
echo "[–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ DHCP]" 
more /var/lib/dhcp/* 2>/dev/null | cat 
echo -e "\n" 
# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏ DHCP-—Å–µ—Ä–≤–µ—Ä–∞ (–º–æ–∂–Ω–æ —Å—Ä–∞–∑—É —É–±—Ä–∞—Ç—å –∏–∑ –≤—ã–≤–æ–¥–∞ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–º–µ–Ω–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥, –µ—Å–ª–∏ —Ç–µ–±–µ —ç—Ç–æ –Ω–∞–¥–æ, –∫–æ–Ω–µ—á–Ω–æ)
more /etc/dhcp/* | cat | grep -vE ^ 2>/dev/null 
echo -e "\n" 
# –í –ª–æ–≥–∞—Ö —Å–º–æ—Ç—Ä–∏–º –∏–Ω—Ñ—É –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–º –∞–¥—Ä–µ—Å–µ –ø–æ DHCP
echo "[DHCP in logs]" 
journalctl |  grep  " lease" 
echo -e "\n" 
# –ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º NetworkManager
journalctl |  grep  "DHCP" 
echo -e "\n" 
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ DHCP-–¥–µ–π—Å—Ç–≤–∏—è—Ö –Ω–∞ —Ö–æ—Å—Ç–µ
journalctl | grep -i dhcpd 
echo -e "\n" 

echo "[–°–µ—Ç–µ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Å–æ–∫–µ—Ç—ã —Å –∞–¥—Ä–µ—Å–∞–º–∏]" 
# –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Å–æ–∫–µ—Ç—ã —Å –∞–¥—Ä–µ—Å–∞–º–∏. –≠—Ç–∏ –∂–µ –∫–ª—é—á–∏ —Å—Ä–∞–±–æ—Ç–∞—é—Ç –¥–ª—è —É—Ç–∏–ª–∏—Ç—ã ss –Ω–∏–∂–µ
netstat -anlp 2>/dev/null 
echo -e "\n" 
#netstat -anoptu
#netstat -rn
# netstat ‚Äìabefoqrstx
# –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ netstat, –≤—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫ –æ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) —Å —Ç–µ–∫—É—â–∏–º–∏ TCP/UDP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏
ss -tuplna 2>/dev/null 
echo -e "\n" 

echo "[–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ–ª—É–æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π]" 
#netstat -tan | grep -i syn | wc -—Å
netstat -tan | grep -—Å -i syn 2>/dev/null 
echo -e "\n" 

echo "[–°–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (lsof -Pi)]" 
lsof -Pi 2>/dev/null
echo -e "\n" 
} >> network_info 

{
# –ù–µ–∑–∞–º—ã—Å–ª–æ–≤–∞—Ç—ã–π –∫–∞—Ä–≤–∏–Ω–≥ –∏–∑ –ª–æ–≥–æ–≤ —Å–µ—Ç–µ–≤—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
echo "[Network connections list - connection]" 
journalctl -u NetworkManager | grep -i "connection '" 
echo -e "\n" 
echo "[Network connections list - addresses]" 
journalctl -u NetworkManager | grep -i "address"  # –∞–¥—Ä–µ—Å–æ–≤

echo -e "\n" 
echo "[Network connections wifi enabling]" 
journalctl -u NetworkManager | grep -i wi-fi  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π-–æ—Ç–∫–ª—é—á–µ–Ω–∏–π Wi-Fi
echo -e "\n" 

echo "[Network connections internet]" 
journalctl -u NetworkManager | grep -i global -C2  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
echo -e "\n" 

# –°–µ—Ç–∏ Wi-Fi, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø–æ–¥–∫–ª—é—á–∞–ª–∏—Å—å
echo "[wifi networks info]"  
grep psk= /etc/NetworkManager/system-connections/* 2>/dev/null 
echo -e "\n" 
# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞
cat /etc/NetworkManager/system-connections/* 2>/dev/null 
echo -e "\n" 

# collect "iptables" information
echo "[Firewall configuration iptables-save]"  
iptables-save 2>/dev/null 
echo -e "\n" 
iptables -n -L -v --line-numbers 2>/dev/null
echo -e "\n" 
iptables -S 2>/dev/null
echo -e "\n" 

# collect "ip6tables" information
echo "[Firewall configuration ipt6ables-save]"  
ip6tables-save 2>/dev/null 
echo -e "\n" 
ip6tables -n -L -v --line-numbers 2>/dev/null
echo -e "\n" 
# ip6tables -L 
ip6tables -S 2>/dev/null
echo -e "\n" 

# –°–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª —Ñ–∞–π—Ä–≤–æ–ª–∞ nftables
echo "[Firewall configuration nftables]"  
nft list ruleset 2>/dev/null
# alt:  /usr/sbin/nft list ruleset 2>/dev/null
echo -e "\n" 

# ufw status
echo "[UFW rules]"
ufw status verbose 2>/dev/null
echo -e "\n" 
# UFW show rules
echo "[UFW rules]"
ufw show added 2>/dev/null
echo -e "\n" 

# firewalld
# list firewalld zones
echo "[Firewalld]"
firewall-cmd --list-all-zones 2>/dev/null
echo -e "\n" 

} >> network_add_info

{
# –ò—â–µ–º IP-–∞–¥—Ä–µ—Å–∞ –≤ –ª–æ–≥–∞—Ö –∏ –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫
#! journalctl | grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]| sudo [01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' | sort |uniq
#! grep -r -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' /var/log | sort | uniq

# –ò—â–µ–º –∞–π–ø–∏—à–Ω–∏–∫ —Å—Ä–µ–¥–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
#! grep -A2 -B2 -rn '66.66.55.42' --exclude="*ifrit.sh" --exclude-dir=$saveto /usr /etc  2>/dev/null 

#! –ò—â–µ–º –∞–π–ø–∏—à–Ω–∏–∫ –≤ –ª–æ–≥–∞—Ö –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç
echo "[–ò—â–µ–º IP-–∞–¥—Ä–µ—Å–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö...]"
for f in ${ips[@]};
do
    echo "Search $f" 
    echo -e "\n" 
    grep -C2 -rn $f --exclude="*ifrit.sh" --exclude-dir=$saveto /usr /etc /var 2>/dev/null 
done

# –ö–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥—Å—á—ë—Ç–∞ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ—Å—Ç–∏ –¥–ª—è accesslogs
# https://www.jaiminton.com/cheatsheet/DFIR/#size-of-file-bytes
# cut -d " " -f 1 access.log | sort -u | wc -l

} >> IP_search_info


# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª network_info
# ----------------------------------
# ----------------------------------

# –ê–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–º–æ–Ω—ã, –ø—Ä–æ—Ü–µ—Å—Å—ã, –∑–∞–¥–∞—á–∏ –∏ –∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
# (–∏ —Ç–∏–ø–æ–≤—ã–µ –º–µ—Å—Ç–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤—Ä–µ–¥–æ–Ω–æ—Å–æ–≤, —á–∞—Å—Ç—å 1)

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª activity_info >>>

echo -e "${magenta}[–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π (–ø—Ä–æ—Ü–µ—Å—Å—ã, –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ ...) –≤ —Å–∏—Å—Ç–µ–º–µ]${clear}"

{


# –í—ã–≤–æ–¥ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
# –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –∏ –≤—Å—ë, —á—Ç–æ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –¥–∏—Å–ø–ª–µ—é:
# xlsclients | sort | uniq
echo "[Running GUI apps]"
xlsclients 2>/dev/null | awk {'print $2'} |sort | uniq
echo -e "\n" 
echo "[Running GUI apps from xwininfo]"
# alt: xwininfo -root -tree 
xwininfo -root -children 2>/dev/null
echo -e "\n" 


# debug and unused commands. Maybe another linux distro?
#wmctrl -lp
#pstree 
#xrestop 
#xrestop -b
#xlsclients 
#xlsclients -l
#xprop -id
#xwininfo
#wmctrl  -lp | awk  '{ print $3 }' | sort | uniq
# enddebug



# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–∏—Ö –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö –≤ screen
echo "[–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π (Screen)]"  
screen -ls 2>/dev/null 
echo -e "\n" 

echo "[–§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ (jobs)]"  
jobs 
echo -e "\n" 

echo "[–ó–∞–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ (Crontab)]" 
crontab -l 2>/dev/null 
echo -e "\n" 
} >> activity_info 

echo -e "${magenta}[–ê–Ω–∞–ª–∏–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤]${clear}"
{
echo "[–ó–∞–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ (Crontab) –≤ —Ñ–∞–π–ª–∞—Ö /etc/cron*]" 
more /etc/cron*/* | cat 
echo -e "\n" 

echo "[–í—ã–≤–æ–¥ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤ (Crontab)]" 
for user in $(ls /home/); do echo "[Crontabs for $user]"; crontab -u $user -l;   echo -e "\n"  ; done
echo -e "\n" 

echo "[–õ–æ–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (Crontab) –≤ —Ñ–∞–π–ª–∞—Ö /etc/cron*]" 
more /var/log/cron.log* 2>/dev/null | cat 
echo -e "\n" 

echo "[–û–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π –∫—Ä–æ–Ω:]" 
find /etc/cron* -type f -perm -o+w -exec ls -l {} \;
echo -e "\n" 

} >> cronconfigs_info

{
echo "[–ó–∞–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ (Crontab) –≤ —Ñ–∞–π–ª–∞—Ö /etc/crontab]" 
cat /etc/crontab 
echo -e "\n" 

echo "[–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (—Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .desktop)]"  
ls -lta  /etc/xdg/autostart/* 2>/dev/null   
echo -e "\n" 

echo "[–ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –≤—ã–ø–æ–ª–Ω—è–µ–º—ã—Ö –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∏ (xdg)]"  
cat  /etc/xdg/autostart/* | grep "Exec=" 2>/dev/null   
echo -e "\n" 

echo "[–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –≤ GNOME –∏ KDE]"  
more  /home/*/.config/autostart/*.desktop 2>/dev/null | cat  
echo -e "\n" 

echo "[–ó–∞–¥–∞—á–∏ –∏–∑ systemctl list-timers (–ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –∑–∞–¥–∞—á–∏)]" >> host_info
systemctl list-timers --all
echo -e "\n" 

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –ª—É—á—à–µ –∫–ª–∞—Å—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª–∏–∫
echo "[–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (ROOT)]" 
ps -l 
echo -e "\n" 

} >> activity_info


{
# –ì–ª–∞–º—É—Ä–Ω—ã–π –≤—ã–≤–æ–¥ –¥–µ—Ä–µ–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "[–î–µ—Ä–µ–≤–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤]" 
#pstree -Aup 
pstree -aups 2>/dev/null
echo -e "\n" 


# –¢–µ–∫—Å—Ç–æ–≤—ã–π –≤—ã–≤–æ–¥ –∞–Ω–∞–ª–æ–≥–∞ –≤–∏–Ω–¥–æ–≤–æ–≥–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
echo "[–ò–Ω—Ñ–∞ –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö —á–µ—Ä–µ–∑ top]" 
top -bcn1 -w512  
echo -e "\n" 

echo "[–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–≤—Å–µ)]" 
ps -auxw
#ps aux 
#ps -eaf
echo -e "\n" 

echo "[–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–¥–µ—Ä–µ–≤–æ)]" 
ps auxwf
echo -e "\n" 

} >> pstree_file


echo -e "${magenta}[–ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏]${clear}"
{
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—á—Ç–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª - —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–∫—Ä—ã—Ç–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ—á—Ç—ã –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏
for usa in $(ls /home); do
# R7-office mail rules get
echo -e "[R7-organizer mail rules]"
more /home/$usa/.r7organizer/*.default-default/*Mail/*/*msgFilterRules.dat 2>/dev/null | cat
echo -e "\n" 
more /home/$usa/.r7organizer/*.default/*Mail/*/*msgFilterRules.dat 2>/dev/null| cat
echo -e "\n" 

# Get thunderbird extensions and rules
echo -e "[Thunderbird mail rules]"
more /home/$usa/.thunderbird/*.default-release/*Mail/*/msgFilterRules.dat 2>/dev/null | cat
echo -e "\n" 
more /home/$usa/.thunderbird/*.default/*Mail/*/msgFilterRules.dat 2>/dev/null| cat
echo -e "\n" 
done


echo "[–í—ã–≤–æ–¥ –∑–∞–¥–∞—á –≤ –±—ç–∫–≥—Ä–∞—É–Ω–¥–µ atjobs]" 
ls -lta /var/spool/cron/atjobs 2>/dev/null 
echo -e "\n" 

echo "[–í—ã–≤–æ–¥ jobs –∏–∑ var/spool/at/]" 
more /var/spool/at/* 2>/dev/null | cat 
echo -e "\n" 

echo "[–§–∞–π–ª—ã deny|allow —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ —é–∑–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤ cron –∏–ª–∏ jobs]" 
more /etc/at.* 2>/dev/null | cat 
echo -e "\n" 

echo "[–í—ã–≤–æ–¥ –∑–∞–¥–∞—á Anacron]" 
more /var/spool/anacron/cron.* 2>/dev/null | cat 
echo -e "\n" 

} >> activity_info 

{
echo "[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–∫—Ä–∏–ø—Ç—ã –≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–µ rc (legacy-—Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –ª–æ–≥–æ–Ω–æ–º)]" 
more /etc/rc*/* 2>/dev/null | cat 
echo -e "\n" 
more /etc/rc.d/* 2>/dev/null | cat 
echo -e "\n" 
} >> rc_scripts

# Package files
echo -e "${green}[–ü–∞–∫—É–µ–º LOG-—Ñ–∞–π–ª—ã (/var/log/)...]${clear}"
echo "[–ü–∞–∫—É–µ–º LOG-—Ñ–∞–π–ª—ã...]" >> activity_info 


# /var/log/
tar -zc -f ./artifacts/VAR_LOG.tar.gz /var/log/ 2>/dev/null

# –®–ø–æ—Ä–∞:
#/var/log/auth.log –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
#/var/log/cron.log Cron –∑–∞–¥–∞—á–∏
#/ var / log / maillog –ü–æ—á—Ç–∞
#/ var / log / httpd Apache
# –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://www.securitylab.ru/analytics/520469.php


# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª activity_info
# ----------------------------------
# ----------------------------------

# –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–ª—É–∂–±—ã –∏ –∏—Ö –∫–æ–Ω—Ñ–∏–≥–∏
# (–∏ —Ç–∏–ø–æ–≤—ã–µ –º–µ—Å—Ç–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤—Ä–µ–¥–æ–Ω–æ—Å–æ–≤, —á–∞—Å—Ç—å 2)

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª services_info >>>

echo -e "${cyan}[–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ]${clear}"

{
echo "[–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª—É–∂–± systemd]"  
systemctl list-units  
echo -e "\n" 

echo "[–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–ª—É–∂–±]"  
# –º–æ–∂–Ω–æ –æ—Ç–¥–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–¥—É–ª–∏ —è–¥—Ä–∞: cat /etc/modules.conf –∏ cat /etc/modprobe.d/*
# systemctl list-unit-files
systemctl list-unit-files --type=service 
echo -e "\n" 

echo "[–°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö —Å–ª—É–∂–± (–∫–æ–º–∞–Ω–¥–æ–π service)]"  
service --status-all 2>/dev/null 
echo -e "\n" 

# To list software from a terminal 
echo "[systemctl -a]" 
# systemctl --full --all
systemctl -a 2>/dev/null 
echo -e "\n" 


# Units
echo "[systemctl status]" 
systemctl status  2>/dev/null 
echo -e "\n" 


} >> services_info 

{

echo "[systemctl status]" 
echo "[systemctl units pathh for system]" 
systemd-analyze unit-paths  2>/dev/null 
echo -e "\n" 
echo "[systemctl units pathh for user]" 
systemd-analyze unit-paths --user 2>/dev/null 
echo -e "\n" 

echo "[–í—ã–≤–æ–¥ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤]"  
more /etc/systemd/system/*.service | cat 
echo -e "\n" 
} >> services_configs

{
echo "[–°–ø–∏—Å–æ–∫ –∑–∞–ø—É—Å–∫–∞–µ–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (init)]"  
ls -lta /etc/init  2>/dev/null 
echo -e "\n" 

echo "[–°—Ü–µ–Ω–∞—Ä–∏–∏ –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–µ–º–æ–Ω–æ–≤ (init.d)]"  
ls -lta /etc/init.d  2>/dev/null 
echo -e "\n" 
} >> services_info

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª services_info
# ----------------------------------
# ----------------------------------

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª devices_info >>>

echo -e "${magenta}[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö]${clear}"
{
# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ –æ PCI-—à–∏–Ω–µ
echo "[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö (lspci)]" 
lspci 
echo -e "\n" 

# printers check
echo "[Any printers?]"
lpstat -a 2>/dev/null #Printers info
echo -e "\n" 

echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB (lsusb)]" 
lsusb 
echo -e "\n" 

echo "[–ë–ª–æ—á–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (lsblk)]" 
lsblk 2>/dev/null
echo -e "\n" 
# more /sys/bus/pci/devices/*/* | cat 

echo "[–°–ø–∏—Å–æ–∫ –ø—Ä–∏–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º (findmnt)]" 
findmnt 
echo -e "\n" 

echo "[Bluetooth —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (bt-device -l)]" 
bt-device -l 2>/dev/null 
echo -e "\n" 

echo "[Bluetooth —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (hcitool dev)]" 
hcitool dev 2>/dev/null 
echo -e "\n" 

echo "[Bluetooth —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (/var/lib/bluetooth)]" 
ls -ltaR /var/lib/bluetooth/ 2>/dev/null 
echo -e "\n" 

} >> devices_info 

{

# –ü—Ä–∏–º–µ—Ä usbrip, –µ—Å–ª–∏ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
# https://github.com/snovvcrash/usbrip
echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB (usbrip)]" 
usbrip events history 2>/dev/null 
echo -e "\n" 

# –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ USB-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ‚Äî —É Linux –∞–ø—Ç–∞–π–º –æ–±—ã—á–Ω–æ –±–æ–ª—å—à–æ–π, –º–æ–∂–µ—Ç, –ø—Ä–æ–∫–∞—Ç–∏—Ç
echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB –∏–∑ dmesg]" 
dmesg | grep -i usb 2>/dev/null 
echo -e "\n" 

# Usbrip –¥–µ–ª–∞–µ—Ç —Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ –ø–æ—Ç–æ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –¥–µ–ª–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ
echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB –∏–∑ journalctl]" 
journalctl | grep -i usb 
# journalctl -o short-iso-precise | grep -iw usb
echo -e "\n" 

echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB –∏–∑ syslog]" 
cat /var/log/syslog* 2>/dev/null | grep -i usb | grep -A1 -B2 -i SerialNumber: 
echo -e "\n" 

echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB –∏–∑ (log messages)]" 
cat /var/log/messages* 2>/dev/null | grep -i usb | grep -A1 -B2 -i SerialNumber: 2>/dev/null 
echo -e "\n" 

# –ö–∞–∫ —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª —Å–æ–±–∏—Ä–∞—Ç—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –¥–∞–≤–Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–ª–∞—Å—å
echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB (—Å–∞–º–æ–≥—Ä–µ–ø dmesg)]" 
dmesg | grep -i usb | grep -A1 -B2 -i SerialNumber: 
echo -e "\n" 
echo "[–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ USB (—Å–∞–º–æ–≥—Ä–µ–ø journalctl)]" 
journalctl | grep -i usb | grep -A1 -B2 -i SerialNumber: 
echo -e "\n" 

} >> usb_list_file

{
echo "[–î—Ä—É–≥–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏–∑ journalctl]" 
journalctl| grep -i 'PCI|ACPI|Plug' 2>/dev/null 
echo -e "\n" 

echo "[–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–≥–æ –∫–∞–±–µ–ª—è (–∞–¥–∞–ø—Ç–µ—Ä–∞) –∏–∑ journalctl]" 
journalctl | grep "NIC Link is" 2>/dev/null 
echo -e "\n" 

# –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –∫—Ä—ã—à–∫–∏ –Ω–æ—É—Ç–±—É–∫–∞
echo "[LID open-downs:]"  
journalctl | grep "Lid"  2>/dev/null  
echo -e "\n" 
} >> devices_info

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª devices_info
# ----------------------------------
# ----------------------------------

# –ó–∞–∫—Ä–µ–ø—ã –≤—Ä–µ–¥–æ–Ω–æ—Å–æ–≤
# —Å–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ—É –∏ –∫–æ–Ω—Ñ–∏–≥–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª env_profile_info >>>

echo -e "${cyan}[–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã, —à–µ–ª–ª–µ –∏ –ø—Ä–æ—Ñ–∏–ª—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]${clear}"
{
echo "[–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã –û–° (env)]" 
env 
echo -e "\n" 

echo "[–í—Å–µ —Ç–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã]" 
printenv 
echo -e "\n" 

echo "[–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —à–µ–ª–ª–∞]" 
set 
echo -e "\n" 

echo "[–†–∞—Å–ø–æ–ª–æ–∂–Ω–µ–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–µ–ª–ª–æ–≤:]" 
cat /etc/shells 2>/dev/null 
echo -e "\n" 

if [ -e "/etc/profile" ] ; then
    echo "[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ /etc/profile]" 
    cat /etc/profile 2>/dev/null 
    echo -e "\n" 
fi

if [ -e "/etc/bashrc" ] ; then
    echo "[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ /etc/bashrc]" 
    cat /etc/bashrc 2>/dev/null 
    echo -e "\n" 
fi

if [ -e "/etc/bash.bashrc" ] ; then
    echo "[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ /etc/bash.bashrc]" 
    cat /etc/bash.bashrc 2>/dev/null 
    echo -e "\n" 
fi


} >> env_profile_info

{
echo "[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ —Ñ–∞–π–ª–æ–≤ /home/users/.*]" 
for name in $(ls /home); do
    #more /home/$name/.*_profile 2>/dev/null | cat 
	echo Hidden config-files for: $name 
	more /home/$name/.* 2>/dev/null | cat  
    echo -e "\n" 
done

echo "[–õ–∏–º–∏—Ç—ã:]" 
# user limits
ulimit -a 

} >> users_cfgs

{

echo "[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤ —Ä—É—Ç–∞ - cat ROOT /root/.* (homie directory content + history)]" 
# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, –ø—Ä–∏–º–µ—Ä
#.*_profile (.profile)
#.*_login
#.*_logout
#.*rc
#.*history 
more /root/.* 2>/dev/null | cat 
echo -e "\n" 
} >> root_cfg

{

echo "[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ SUDO]" 
cat /etc/sudoers 2>/dev/null 
echo -e "\n" 
more /etc/sudoers.d/* 2>/dev/null | cat
echo -e "\n" 

} >> env_profile_info

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª env_profile_info
# ----------------------------------
# ----------------------------------


# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª susp_chk >>>

echo -e "${cyan}[–ê–Ω–∞–ª–∏–∑ –º–µ—Å—Ç –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è]${clear}"
{
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∑–ª–æ–¥–µ–µ–≤ (–∫—Ç–æ-—Ç–æ —Å–∫–∞–∂–µ—Ç: –∫–æ–ª–ª–µ–≥–∏)

# 1. –ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ /dev/null
# check HIGHLY suspicious /dev/null links
# used by attackers to disable logs and history
echo "[Check for /dev/null link set as critical files!]"
ls -lar /var/log/ 2>/dev/null | grep "/dev/null"
echo -e "\n" 
ls -lar /root/ 2>/dev/null | grep "/dev/null"
echo -e "\n" 
# history etc.
ls -lar /home/*/.* 2>/dev/null | grep "/dev/null"
echo -e "\n" 

# 1.1 –§–∞–π–ª—ã –ø–∏—à—É—Ç –≤ /dev/null

echo "[–§–∞–π–ª—ã —Å –≤—ã–≤–æ–¥–æ–º –≤ /dev/null]" 
lsof -w /dev/null 2>/dev/null
echo -e "\n" 


# 2. –ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–æ–ª—å—à–µ –Ω–µ –ø–∏—à—É—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ Immutable —Ä–µ–∂–∏–º–µ
# Inspired by https://forumsoc.ru/reports/file/73/
# check HIGHLY suspicious immutable bit set
# used by attackers to disable logs and history
echo "[Check for immutable bit set on critical files]"
lsattr -R /var/log/ 2>/dev/null | grep -- "-i-"
echo -e "\n" 
lsattr -R /root/ 2>/dev/null | grep -- "-i-"
echo -e "\n" 
# history etc.
lsattr -R /home/*/.* 2>/dev/null | grep -- "-i-"
echo -e "\n" 

# 3.  –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è - –∑–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
echo "[Device connection  scripts]"
more /etc/udev/rules.d/* 2>/dev/null | cat
echo -e "\n" 

# 4. –°–º–æ—Ç—Ä–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º —Ñ–∞–π–ª–∞–º –∫–æ—Ç–æ—Ä—ã—Ö —Å–∫—Ä—ã—Ç, –∏–ª–∏ —Å–∞–º–æ –∏–º—è –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–∫—Ä—ã—Ç–æ, –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å–æ —Å–∫—Ä—ã—Ç—ã–º–∏–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º–∏ –≤ path
# show processes with executable in HIDDEN location or with HIDDEN name:
echo "[SUSPICIOUS process started or named hidden, or with hidden path in args]"
ps ax -o pid,user,cmd | grep "/\."
echo -e "\n" 


# 5. –ü—ã—Ç–∞–µ–º—Å—è –≤—ã—è–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–∞—Å–∫–∏—Ä—É—é—Ç—Å—è –ø–æ–¥ –ø–æ—Ç–æ–∫–∏ —è–¥—Ä–∞
 # Suspucious imposters ~Linux Kernel Process Masquerading 
 # by https://sandflysecurity.com/blog/detecting-linux-kernel-process-masquerading-with-command-line-forensics/
 # ps auxww | grep \\[ | awk '{print $2}' | xargs -I % sh -c 'echo PID: %; cat /proc/%/maps' 2> /dev/null
 # Modifyed by me - shows PIDs, user and CMD, then uniq suspicious pathes of its:
 echo "[Suspicious map process pathes and their stats - to manual analysis:]" 
 #ps auxww | grep \\[ | awk '{print $1 " " $2 " " $11}' | xargs -I % sh -c 'echo % && echo $(echo % | cut -d " " -f 2 | xargs -I @ rev /proc/@/maps 2>/dev/null | cut -d " " -f1 | rev | sort | uniq) ' | sort | uniq
 ps auxww | grep \\[ | awk '{print $2}' | xargs -I % sh -c 'rev /proc/%/maps 2>/dev/null | cut -d " " -f1 | rev  | sort | uniq | xargs -0 --no-run-if-empty echo -e "$(ps -p % -o pid=,user=,cmd=)\n"' | sort | uniq
# realpath /proc/22429/exe
 echo -e "\n" 
 
# 6. –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å —É–¥–∞–ª—ë–Ω–Ω—ã–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º —Ñ–∞–π–ª–æ–º
# https://sandflysecurity.com/blog/how-to-recover-a-deleted-binary-from-active-linux-malware/
echo "[Processes with deleted executable]"  
find /proc -name exe ! -path "*/task/*" -ls 2>/dev/null | grep deleted 
echo -e "\n" 

# 7. Processes runned from memory via memfd_create():
echo "[Processes runned from memory via memfd_create]" 
 ls -alR /proc/*/exe 2> /dev/null | grep memfd:.*\(deleted\)
echo -e "\n" 

# 8. –ù–µ—É–¥–∞—á–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞ - –º–± –±—ã–ª –±—Ä—É—Ç–∏–∫
if [ -e /var/log/btmp ]
	then 
	echo "[Last LOGIN fails: lastb]" 
	lastb 2>/dev/null 
	echo -e "\n" 
fi

 
} >> susp_chk

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª susp_chk
# ----------------------------------
# ----------------------------------



# –°—é–¥–∞ –ø–æ–º–µ—â–∞–µ–º –∫—Ä–∞–π–Ω–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ-—Ö–æ—Ä–æ—à–µ–º—É –∏ —É–¥–∞–ª–∏—Ç—å 
# –ë—ã—Ç—å –º–æ–∂–µ—Ç, –∫–æ–º—É-—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤ —á–∞—Å—Ç–∏ –∏–∑–±—ã—Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
#! - –Ω–∞—á–∞–ª–æ –¥–ª—è —Ñ–∞–π–ª–∞ junk_info

# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª junk_info >>>

echo -e "${cyan}[–†–∞–Ω–¥–æ–º–Ω—ã–µ –≤–µ—â–∏....]${clear}"
{

# –í–¥—Ä—É–≥ –≤ –±—É—Ñ–µ—Ä–µ —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–Ω—å–∫–æ–µ))
# clipboard check by https://book.hacktricks.xyz/linux-hardening/privilege-escalation
echo "[Clibboard smth?]"
if [ `which xclip 2>/dev/null` ]; then
    echo "Clipboard: "`xclip -o -selection clipboard 2>/dev/null`
    echo "Highlighted text: "`xclip -o 2>/dev/null`
  elif [ `which xsel 2>/dev/null` ]; then
    echo "Clipboard: "`xsel -ob 2>/dev/null`
    echo "Highlighted text: "`xsel -o 2>/dev/null`
  else echo "No applicable clipboard =(. Not found xsel and xclip"
  fi
 echo -e "\n"  


# inter-process communication status (active message queues, semaphore sets, shared memory segments)
echo "[Inter-proc communication stats"
ipcs -a  2>/dev/null
echo -e "\n" 

# –ü—Ä–æ–≤–µ—Ä–∏–º—Å—è –Ω–∞ —Ä—É—Ç–∫–∏—Ç—ã, –∏–Ω–æ–≥–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç
echo "[–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ rootkits –∫–æ–º–∞–Ω–¥–æ–π chkrootkit]" 
chkrootkit 2>/dev/null 
echo -e "\n" 


# systemd dumps listing
echo "[–ü–µ—Ä–µ—á–µ–Ω—å –∫—Ä–∞—à–¥–∞–º–ø–æ–≤]" 
coredumpctl list  2>/dev/null
echo -e "\n" 
ls -la /var/lib/systemd/coredump
echo -e "\n" 


# OS specific

if [ -f /sys/digsig/elf_mode ]; then
	# Astra Linux Closed Software Environment mode
	echo "[AstraLinux - protected software mode]" 
	cat /sys/digsig/elf_mode 2>/dev/null
	echo -e "\n" 
	cat /sys/digsig/xattr_mode 2>/dev/null
	echo -e "\n" 
fi


} >> junk_info

echo -e "${yellow}[–§–∞–π–ª–æ–≤—ã–µ IOC?]${clear}"
echo "[IOC-paths?]" >> junk_info
echo -e "\n" >> junk_info
# https://www.welivesecurity.com/2017/04/25/linux-shishiga-malware-using-lua-scripts/

counter=0;
for f in $iocfiles
do
if [ -e $f ]
then 
	#$counter=$counter +1;
	counter=$((counter+1)) # thanks duodai
	echo -e "${red}IOC-path found: ${clear}" $f
	echo "IOC-path found: " $f >> junk_info
	echo -e "\n" >> junk_info
fi
done

if [ $counter -gt 0 ]
then 
	echo -e "${red}IOC Markers found!!${clear}" 
	echo "IOC Markers found!!" >> junk_info
	echo -e "\n" >> junk_info
fi

# –Ω–∏–∂–µ –∏–¥—É—Ç –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–º–µ–Ω—è–ª–∏—Å—å –≤ —Å–∞–º–æ–π –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–ª —Å–æ–±–æ–π –±–µ–∑—É–º–Ω—É—é –∫–æ–º–ø–∏–ª—è—Ü–∏—é –∏–∑ –∫—É—á–∏ –∫–æ–º–∞–Ω–¥ –±–µ–∑ –æ—Å–æ–±–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –≤ –∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏. –Ω–æ –≤ —á–∞—Å—Ç–∏ —Ä–µ—Å—É—Ä—Å–æ–≤, –∫–Ω–∏–≥ –∏ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –æ–Ω–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –±—ã–ª–∏...
# ...–∞ —Ç–µ–ø–µ—Ä—å –º–Ω–µ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø–∞–¥–ª–æ –∏—Ö —É–±–∏—Ä–∞—Ç—å

echo -e "${yellow}[i am alive, just processing...]${clear}"

{
# time information diff maybe?
echo "[BIOS TIME]" 
hwclock -r 2>/dev/null 
echo -e "\n" 
echo "[SYSTEM TIME]" 
date 
echo -e "\n" 

# privilege information
echo "[PRIVILEGE passwd - all users /etc/passwd]]" 
cat /etc/passwd 2>/dev/null 
echo -e "\n" 

# ssh keys
echo "[Additional info cat ssh (root) keys and hosts]" 
cat /root/.ssh/authorized_keys 2>/dev/null 
cat /root/.ssh/known_hosts 2>/dev/null 
echo -e "\n" 

#for users:
echo "[Additional info cat ssh (users) keys and hosts]" 
for name in $(ls /home)
do
echo "[SSH-files for: $name]"
cat /home/$name/.ssh/authorized_keys 2>/dev/null 
echo -e "\n" 
cat /home/$name/.ssh/known_hosts 2>/dev/null 
done
echo -e "\n" 

# VM - detection
echo "[Virtual Machine Detection]" 
dmidecode -s system-manufacturer 2>/dev/null 
echo -e "\n" 
dmidecode  2>/dev/null 
echo -e "\n" 

# HTTP server inforamtion collection
# Nginx collection
echo "[Nginx Info]" 
echo -e "\n" 
# tar default directory
if [ -e "/usr/local/nginx" ] ; then
    tar -zc -f ./artifacts/HTTP_SERVER_DIR_nginx.tar.gz /usr/local/nginx 2>/dev/null
	echo "Grab NGINX files!" 
	echo -e "\n" 
fi

# Apache2 collection
echo "[Apache Info]" 
echo -e "\n" 
# tar default directory
if [ -e "/etc/apache2" ] ; then
    tar -zc -f ./artifacts/HTTP_SERVER_DIR_apache.tar.gz /etc/apache2 2>/dev/null
	echo "Grab APACHE files!" 
	echo -e "\n" 
fi

# Install files
echo "[Loaded core modules - lsmod]" 
lsmod 
echo -e "\n" 

echo "[–ü—É—Å—Ç—ã–µ –ø–∞—Ä–æ–ª–∏ ?]" 
cat /etc/shadow | awk -F: '($2==""){print $1}' 
echo -e "\n" 

# Malware collection
# .bin
#echo "[BIN FILETYPE]" 
#find / -name \*.bin 
#echo -e "\n" 

# .exe
#echo "[BIN FILETYPE]" 
#find / -name \*.exe 
#echo -e "\n" 

#find copied
# Find nouser or nogroup  data
echo "[NOUSER files]" 
find /root /home -nouser 2>/dev/null 
echo -e "\n" 

# check for files without holder
# find / -xdev \( -nouser -o -nogroup \) -print
# check for files without holder
# find / \( -perm -4000 -o -perm -2000 \) -print

echo "[NOGROUP files]" 
find /root /home -nogroup 2>/dev/null 
echo -e "\n" 


} >> junk_info

{
echo "[Currently open files: lsof -n]" 
lsof -n 2>/dev/null
echo -e "\n" 

echo "[Verbose open files: lsof -V ]"  #open ports
lsof -V  2>/dev/null
# lsof 
echo -e "\n" 
} >> lsof_file

{
echo "[Query journal: journalctl]"  
# super errors mode:
# journalctl -o verbose -p 4 
journalctl 
##journalctl -o export > journal-exp.txt
echo -e "\n" 
} >> journalctlq

{

if [ -e /var/log/wtmp ]
	then 
	echo "[Login logs and reboot: last -f /var/log/wtmp]" 
	last -f /var/log/wtmp 
	echo -e "\n" 
fi

if [ -e /etc/inetd.conf ]
then
	echo "[inetd.conf]" 
	cat /etc/inetd.conf 
	echo -e "\n" 
fi

echo "[File system info: df -k in blocks]" 
df -k 
echo -e "\n" 

echo "[File system info: df -Th in human format]" 
df -Th 
echo -e "\n" 

echo "[List of mounted filesystems: mount]" 
mount 
echo -e "\n" 


echo "[Repo info: cat /etc/apt/sources.list and subconfigs]"  
#cat /etc/apt/sources.list 
more /etc/apt/sources.list* 2>/dev/null | cat 
echo -e "\n" 
more /etc/apt/sources.list*/* 2>/dev/null | cat 
echo -e "\n" 

echo "[Static file system info: cat /etc/fstab]"  
cat /etc/fstab 2>/dev/null 
echo -e "\n" 

# echo "Begin Additional Sequence Now *********************************"

# Vurtual memory statistics
echo "[Virtual memory state: vmstat]"  
vmstat 
echo -e "\n" 
echo "[Virtual memory state: vmstat disks]"  
# disk statistics
vmstat -D  2>/dev/null
echo -e "\n" 
echo "[Virtual memory state: vmstat memory]"  
# memory statistics
vmstat -s 2>/dev/null
echo -e "\n" 


# Check for hardware events
echo "[HD devices check: dmesg | grep hd]"  
dmesg | grep -i hd 2>/dev/null 
echo -e "\n" 

# Show activity log
echo "[Get log messages: cat /var/log/messages]"  
cat /var/log/messages 2>/dev/null 
echo -e "\n" 

echo "[USB check 3 Try: cat /var/log/messages]"  
cat /var/log/messages 2>/dev/null | grep -i usb 2>/dev/null 
echo -e "\n" 

# List all mounted files and drives
echo "[List all mounted files and drives: ls -lat /mnt]"  
ls -lat /mnt 
echo -e "\n" 

echo "[Logind  config]"
# systemd configuration options
cat  /etc/systemd/logind.conf 2>/dev/null
echo -e "\n" 

# System config info junk
cat /etc/mtab 2>/dev/null 
echo -e "\n" 

echo "[Disk usage: du -sh]"  
du -sh 
echo -e "\n" 

echo "[Disk partition info: fdisk -l]"  
fdisk -l 2>/dev/null 
echo -e "\n" 

echo "[Additional info - OS version cat /proc/version]" 
cat /proc/version 
echo -e "\n" 

echo "[Additional info lsb_release (distribution info)]" 
lsb_release 2>/dev/null 
echo -e "\n" 

echo "[Memory free]"  
free -h
echo -e "\n" 

echo "[Hardware: lshw]"  
lshw 2>/dev/null 
echo -e "\n" 

echo "[Hardware info: cat /proc/(cpuinfo|meminfo), lscpu]"  
cat /proc/cpuinfo 
echo -e "\n" 
lscpu 2>/dev/null
echo -e "\n" 
cat /proc/meminfo 
echo -e "\n" 


echo "[Profile parameters: cat /etc/profile.d/*]"  
more /etc/profile.d/* 2>/dev/null | cat
echo -e "\n" 

echo "[Language locale]"  
locale  2>/dev/null 
echo -e "\n" 

#manual installed
echo "[Get manually installed packages apt-mark showmanual (TOP)]"  
apt-mark showmanual 2>/dev/null 
echo -e "\n" 


#echo "[Get manually installed packages apt list --manual-installed | grep -F \[installed\]]"  
#aptitude search '!~M ~i'
#aptitude search -F %p '~i!~M'

mkdir -p ./artifacts/config_root
#desktop icons and other_stuff
cp -r /root/.config ./artifacts/config_root 2>/dev/null 
#saved desktop sessions of users
cp -R /root/.cache/sessions ./artifacts/config_root 2>/dev/null 

echo "[VMware clipboard (root)!]" 
ls -ltaR /root/.cache/vmware/drag_and_drop/ 2>/dev/null 
echo -e "\n" 

echo "[Mails of root]" 
# alt: ls -l /var/mail/root 2>/dev/null
cat /var/mail/root 2>/dev/null 
echo -e "\n" 
echo "[Spool mails]" 
# add mail check
cat /var/spool/mail/* 2>/dev/null 
echo -e "\n" 


#cp -R ~/.config/ 2>/dev/null 

#recent 
echo "[Recently-Used]"  
more  /home/*/.local/share/recently-used.xbel 2>/dev/null | cat 
echo -e "\n"  

#get mail for each user:
#echo "[Recently-Used]"  
#cat /var/mail/username$ 2>/dev/null 

#mini list of apps
echo "[Var-LIBS directories - like program list]"  
ls -lta /var/lib 2>/dev/null  
echo -e "\n" 

# crypto stuff
echo "[Some encypted data?]"  
cat /etc/crypttab 2>/dev/null  
echo -e "\n" 

# Default settings for user directories
echo "[User dirs default configs]"  
cat /etc/xdg/user-dirs.defaults  2>/dev/null  
echo -e "\n"       

#os info
echo "[OS-release:]"  
cat /etc/os-release 2>/dev/null  
echo -e "\n" 

#list boots 
echo "[List of boots]"  
journalctl --list-boots  2>/dev/null  
echo -e "\n" 

#machine ID
echo "[Machine-ID:]"  
cat /etc/machine-id 2>/dev/null 
echo -e "\n" 

#GPG info
echo "[GnuPG contains:]"  
ls -ltaR /home/*/.gnupg/* 2>/dev/null  
echo -e "\n" 

# –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≤–∏–¥–µ dat-—Ñ–∞–π–ª–æ–≤ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–∞—Ç–∞—Ä–µ–∏ –Ω–æ—É—Ç–±—É–∫–∞, –≤–∫–ª—é—á–∞—è –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞—Ä—è–¥–∫–∏, —Ä–∞—Å—Ö–æ–¥ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –±–∞—Ç–∞—Ä–µ–π–∫–∏ –∏ –µ–µ –∑–∞—Ä—è–¥–∞
#battery info for laptops
#history¬≠charge¬≠*.dat ‚Äî log of percentage charged
# history¬≠rate¬≠*.dat ‚Äî log of energy consumption rate
#history¬≠time¬≠empty¬≠*.dat ‚Äî when unplugged, log of time (in seconds) until empty
# history¬≠time¬≠full¬≠*.dat ‚Äî when charging, log of time (in seconds) until full
echo "[Battery logs]"  
more /var/lib/upower/* 2>/dev/null | cat  
echo -e "\n"  

echo "Get UUID of partitions: blkid" 
blkid 2>/dev/null 
echo -e "\n" 

echo "[Volumes: vol*]" 
more /media/data/vol* 2>/dev/null | cat 
echo -e "\n" 
} >> junk_info

{
echo "[kernel messages: dmesg]" 
# as table
dmesg -T 2>/dev/null 
echo -e "\n" 
} >> dmesg

echo -e "${yellow}[–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ª—É–∂–±–∞—Ö...]${clear}" 
{
echo "[/sbin/sysctl -a (core parameters list)]"  
/sbin/sysctl -a 2>/dev/null 
echo -e "\n" 


# Modules
echo "[Modules listing]" 
find /lib/modules -printf "%M\t%u\t%g\t%s\t%AY-%Am-%Ad-%AH:%AM\t%CY-%Cm-%Cd-%CH:%CM\t%TY-%Tm-%Td-%TH:%TM\t%P\n" 
echo -e "\n" 

} >> kernel_params

#COPY ALL WEB PROFILES FOR THE GOD!
echo -e "${magenta}[Web collection]${clear}"
{
echo "[Web collection start...]" 
mkdir -p ./artifacts/mozilla
cp -r /home/*/.mozilla/firefox/ ./artifacts/mozilla 

#HISTORY OF BROWSERS: places.sqlite
#firefox^
#file ~/.mozilla/firefox/*.default/places.sqlite
#~/.mozilla/firefox/*.default/places.sqlite: SQLite 3.x database, user version 26

#chrome^
#$ file ~/.config/google-chrome-beta/Default/History           
#.config/google-chrome-beta/Default/History: SQLite 3.x database

#Bookmarks
#~/.config/google-chrome/Default/Bookmarks
#~/.config/chromium/Default/Bookmarks

echo "[Look through (SSH) service logs for errors]" 
journalctl _SYSTEMD_UNIT=sshd.service | grep ‚Äúerror‚Äù 2>/dev/null 
echo -e "\n" 
} >> junk_info

#echo "Get users Recent and personalize collection"
echo -e "${yellow}[–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...]${clear}" 
echo "Get users Recent and personalize collection (without Trash files)" >> junk_info

for usa in $users
do
	mkdir -p ./artifacts/share_user/$usa
	cp -r /home/$usa/.local/share ./artifacts/share_user/$usa 2>/dev/null 
done

# because probably too large directory
rm -r ./artifacts/share_user/$usa/Trash 2>/dev/null 
rm -r ./artifacts/share_user/$usa/share/Trash/files 2>/dev/null 

mkdir -p ./artifacts/share_root
cp -r /root/.local/share ./artifacts/share_root 2>/dev/null 
rm -r ./artifacts/share_root/Trash 2>/dev/null 
rm -r ./artifacts/share_root/share/Trash/files 2>/dev/null 
#ls -la /home/*/.local/share/applications/ 

mkdir -p ./artifacts/config_user
#cp -r /home/*/.config ./config_user
for usa in $users
do
	mkdir -p ./artifacts/config_user/$usa
	#desktop icons and other_stuff
	cp -r /home/$usa/.config ./artifacts/config_user/$usa 2>/dev/null 

	#saved desktop sessions of users
	cp -R /home/$usa/.cache/sessions ./artifacts/config_user/$usa 2>/dev/null 
	
	{
	#check mail:
	echo "[Mails of $usa:]" 
	# alt: for x in "/var/mail"; do ls -lh "$x"; done
	cat /var/mail/$usa 2>/dev/null 
	echo -e "\n" 

	echo "[VMware clipboard (maybe)!]" 
	ls -ltaR /home/$usa/.cache/vmware/drag_and_drop/ 2>/dev/null 
	echo -e "\n" 
	

	
	} >> junk_info
done


{
# Check for misonfiguration from Cheatsheet
echo "[Popular config check]"
# samba
cat /etc/samba/smb.conf 2>/dev/null
echo -e "\n" 
# Samba config
testparm -s 2>/dev/null
echo -e "\n" 

cat /etc/chttp.conf 2>/dev/null
echo -e "\n" 
cat /etc/lighttpd.conf 2>/dev/null
echo -e "\n" 
cat /etc/cups/cupsd.conf  2>/dev/null
echo -e "\n" 
cat /etc/inetd.conf 2>/dev/null
echo -e "\n" 
cat /etc/apache2/apache2.conf 2>/dev/null
echo -e "\n" 
cat /etc/my.conf 2>/dev/null
echo -e "\n" 
cat /etc/httpd/conf/httpd.conf 2>/dev/null
echo -e "\n" 
cat /opt/lampp/etc/httpd.conf 2>/dev/null
echo -e "\n" 

cat /opt/lampp/etc/httpd.conf 2>/dev/null
echo -e "\n" 
# get sendmail configuration files
more /etc/mail/* 2>/dev/null | cat
echo -e "\n" 

# get exim configuration files
more /etc/exim4/* 2>/dev/null | cat
echo -e "\n" 

# get postfix configuration files
cat /etc/postfix/*.cf 2>/dev/null
echo -e "\n" 


# NOT incldable checks by kaspers'ky
# get listing of system directories
#ls -la / /tmp /opt /var /etc /usr 2>/dev/null
# get listing of system libs
#ls -la / /usr | grep lib 2>/dev/null
#ls -laL /lib*  2>/dev/null
#ls -laL /usr/lib* 2>/dev/null


#analyze ssl certs and keys
echo "[SSL files:]"  
ls -ltaR /etc/ssl    2>/dev/null  
echo -e "\n" 



} >> junk_info

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª junk_info
# ----------------------------------
# ----------------------------------


# ----------------------------------
# ----------------------------------
# –ù–∞—á–∏–Ω–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª junk_k_info >>>
echo -e "${yellow}[–°–±–æ—Ä –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è...]${clear}" 
{
# kasper best practices
# Antimalware report
# System autorun
echo "[X11 files:]" 
cat /etc/X11/xinit/xinitrc 2>/dev/null
echo -e "\n" 
cat /etc/X11/xinit/xserverrc 2>/dev/null
echo -e "\n" 
echo "[Anacrontab:]" 
cat /etc/anacrontab 2>/dev/null
echo -e "\n" 
echo "[Bash files:]" 
cat /etc/bash.bash_logout 2>/dev/null
echo -e "\n" 
cat /etc/bash.bashrc 2>/dev/null
echo -e "\n" 
cat /etc/bash.bashrc 2>/dev/null
echo -e "\n" 
echo "[incron files:]" 
more /etc/incron.d/* 2>/dev/null | cat
echo -e "\n" 
echo "[init files:]" 
more /etc/init.d/* 2>/dev/null | cat
echo -e "\n" 
cat /etc/inittab 2>/dev/null
echo -e "\n" 
echo "[ld.so files:]" 
cat /etc/ld.so.conf 2>/dev/null
echo -e "\n" 
more /etc/ld.so.conf.d/* 2>/dev/null | cat
echo -e "\n" 
cat /etc/ld.so.preload 2>/dev/null
echo -e "\n" 
echo "[modules files:]" 
cat /etc/modules 2>/dev/null
echo -e "\n" 
more /etc/modules-load.d/* 2>/dev/null | cat
echo -e "\n" 
echo "[Profile files:]" 
cat /etc/profile 2>/dev/null
echo -e "\n" 
more /etc/profile.d/* 2>/dev/null
echo -e "\n" 
echo "[RC files:]" 
cat /etc/rc.boot 2>/dev/null
echo -e "\n" 
cat /etc/rc.local 2>/dev/null
echo -e "\n" 
echo "[Systemd files:]" 
more /etc/systemd/system/* 2>/dev/null | cat
echo -e "\n" 
cat /etc/systemd/system.conf 2>/dev/null
echo -e "\n" 
more /lib/systemd/system/* 2>/dev/null | cat
echo -e "\n" 
echo "[Udev files:]" 
more /etc/udev/rules.d/* 2>/dev/null | cat
echo -e "\n" 
echo "[Update files:]" 
more /etc/update-motd.d/* 2>/dev/null | cat
echo -e "\n" 
more /etc/update.d/* 2>/dev/null | cat
echo -e "\n" 
echo "[XDG files:]" 
more /etc/xdg/autostart/* 2>/dev/null | cat
echo -e "\n" 
cat /etc/xdg/lxsession/LXDE/autostart 2>/dev/null
echo -e "\n" 
echo "[VAR files:]" 
more /var/run/motd.d/* 2>/dev/null | cat
echo -e "\n" 
more /var/spool/anacron/* 2>/dev/null | cat
echo -e "\n" 
cat /var/spool/cron/atjobs 2>/dev/null
echo -e "\n" 
more /var/spool/cron/crontabs/* 2>/dev/null | cat
echo -e "\n" 
more /var/spool/incron/* 2>/dev/null | cat
echo -e "\n" 
} >> junk_k_info

# <<< –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∏—Å–∞—Ç—å —Ñ–∞–π–ª junk_k_info
# ----------------------------------
# ----------------------------------

#! - –∫–æ–Ω–µ—Ü –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤

# ----------------------------------
# ----------------------------------

# –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã

echo -e "${yellow}[Packing artifacts...]${clear}"
tar --remove-files -zc -f ./artifacts.tar.gz artifacts 2>/dev/null
# additional clearing for artifacts folder
rm -rf artifacts 2>/dev/null

#! –æ–±–ª–µ–≥—á–∏–º —Å–µ–±–µ –∑–∞–¥–∞—á—É –≤ –±—É–¥—É—à–µ–º, –∏ –¥–æ–±–∞–≤–∏–º –∑–∞–ø–∏—Å—å —Ç–∞–π–º—Å—Ç–∞–º–ø–æ–≤ –≤–æ –≤—Å–µ —Ñ–∞–π–ª—ã history
if [[ "$set_history" -gt 0 ]]; then
echo "${yellow}[Change HISTTIMEFORMAT to world-best value IMHO]${clear}"
echo "CURRENT HISTTIMEFORMAT: $HISTTIMEFORMAT"
# format:
# seq. number | unix epoch | dd-mm-YYYY | HH:MM:SS | Zone <space>
# 191  1715338321 10-05-2024 13:52:01 MSK history
hist_format="[%s %d-%m-%Y %H:%M:%S %Z] "

#! alt. locations are: ~/.bash_profile, ~/.bashrc ... 
hist_persist="/etc/profile"
if $(grep -q "^HISTTIMEFORMAT=" $hist_persist); then
sed -i "s/^HISTTIMEFORMAT=.*/HISTTIMEFORMAT=\"$hist_format\"/" $hist_persist;
else
sed "$ a\HISTTIMEFORMAT=\"$hist_format\"" -i $hist_persist
fi
echo "Changed HISTTIMEFORMAT to <$hist_format> in $hist_persist !"
fi

{  
echo -e "\n" 
echo "–ó–∞–≤–µ—Ä—à–∏–ª–∏ —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö!" 
date 
echo -e "\n" 
} >> host_info



 } |& tee >(sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" >> ./console_log) # –ù–∞—à –ª–æ–≥-—Ñ–∞–π–ª, —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º–∞–Ω—Ç–∞–Ω—Ç—ã
 
 
# –ó–∞–≤–µ—Ä—à–∞—é—â–∞—è —á–∞—Å—Ç—å –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–∞–Ω–¥
# –î–ª—è –≤—ã—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–∞–µ–º –ø—Ä–∞–≤–∞ –≤—Å–µ–º –Ω–∞ —á—Ç–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ

echo -e "${blue}[–§–æ—Ä–º–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤...]${clear}"
cd ..
tar czf "$saveto.tar.gz" $saveto/

if [ -f "$saveto.tar.gz" ]; then
	echo -n "packed size: "
	du -sh "$saveto.tar.gz" | awk '{print $1}'
	
	echo -e "${cyan}[Clearance (temp files)...]${clear}"
	rm -rf  $saveto

else
echo "Some arhive error! See dir $saveto!"

fi

chmod -R ugo+rwx "./$saveto.tar.gz"
 
 end=`date +%s`
 echo -e "\n" 
 echo "ENDED! Execution time was $(expr $end - $start) seconds."
 #echo -e "${magenta}–ü—Ä–æ–≤–µ—Ä—è–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${saveto}! ${clear}"
 echo -e "${magenta}–ó–∞–±–∏—Ä–∞–π —Ñ–∞–π–ª $saveto.tar.gz! ${clear}"
 echo -e "${red}–ù–µ –∑–∞–±—É–¥—å —É–¥–∞–ª–∏—Ç—å –º–µ–Ω—è, ifrit.sh !! ${clear}"
 pathe=$(readlink -f $saveto.tar.gz)
 echo -e "${yellow}–ü–æ–ª–Ω—ã–π –ø—É—Ç—å: ${pathe}! ${clear}"
# –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ —Ñ–∞–π–ª–æ–≤–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –≤–æ –≤—Å–µ—Ö –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞—Ö. –í Astra —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É fly-fm
# xdg-open .
# –ª—É—á—à–µ –≥—Ä–∞—Ñ–æ–Ω –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–µ –æ—Ç —Ä—É—Ç–∞, –∞ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞:
# namer=$(logname)
# sudo -u $namer xdg-open .
# –æ–¥–Ω–∞–∫–æ –±–µ–∑ sudo –∏–ª–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ, –æ—Å—Ç–∞–≤—å —Ç–∞–∫ –∏–ª–∏ —É–±–µ—Ä–∏ –≤–æ–æ–±—â–µ:
# xdg-open . 2>/dev/null
# –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:
#! –ï—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ - –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å
if (( $EUID != 0 )); then
# Not root - execute GUI to open folder
xdg-open . 2>/dev/null &
else
# decrease privs and open as current user
sudo -u $(logname) xdg-open . 2>/dev/null  &
fi  

# } |& tee >(sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" >> ./console_log) # –ù–∞—à –ª–æ–≥-—Ñ–∞–π–ª, —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ —Ñ–æ—Ä–º–∞–Ω—Ç–∞–Ω—Ç—ã
 

# –°–ø—Ä–∞–≤–æ—á–Ω–æ: —Å–ø–∏—Å–æ–∫ –≤—ã–≤–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤:
	#activity_info - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
	#apps_file - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∏—Å—Ç–æ—Ä–∏—è 
	#console_log - –ª–æ–≥ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞
	#cronconfigs_info - –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
	#devices_info - –∏–Ω—Ñ–∞ –ø–æ –∂–µ–ª–µ–∑—É
	#env_profile_info - –∏–Ω—Ñ–∞ –ø–æ –∫–æ–Ω—Ñ–∏–≥–∞–º –ø—Ä–æ—Ñ–∏–ª—è
	#history_info - –∫–ª—é—á–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Ö–æ—Å—Ç–µ 
	#host_info - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ö–æ—Å—Ç–µ
	#ioc_word_info - —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ —Å—Ç—Ä–æ–∫ –∏–∑ –Ω–∏—Ö, –≥–¥–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∏—Å–∫–æ–º—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
	#IP-search_info - —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≥—Ä–µ–ø–∞ IP-–∞–¥—Ä–µ—Å–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö
	#junk_info - –º–µ–≥–æ–º—É—Å–æ—Ä–Ω—ã–π —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø–æ–∂–µ–ª–∞–Ω—ã –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω—ã–º–∏
	#lsof_file - —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞ lsof
	#network_add_info - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥—Ä–µ–ø–∞ –ª–æ–≥–æ–≤ (—Å–µ—Ç–µ–≤—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã)
	#network_info - –∏–Ω—Ñ–∞ –ø–æ —Å–µ—Ç–µ–≤—ã–º –∫–æ–Ω—Ñ–∏–≥–∞–º
	#pstree_file - –≥–ª–∞–º—É—Ä–Ω—ã–π –≤—ã–≤–æ–¥ –¥–µ—Ä–µ–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
	#root_cfg - —Ç–µ–∫—Å—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –ø—Ä–æ—Ñ–∏–ª—è —Ä—É—Ç–∞
	#services_configs - –∫–æ–Ω—Ñ–∏–≥–∏ –≤—Å–µ—Ö —Å–ª—É–∂–±
	#services_info - –∏–Ω—Ñ–∞ –ø–æ —Å–ª—É–∂–±–∞–º
	#usb_list_file - –∏—Å—Ç–æ—Ä–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è USB-–Ω–æ—Å–∏—Ç–µ–ª–µ–π
	#users_files - –∏–Ω—Ñ–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Ñ–∞–π–ª–∞–º, –º–∏–Ω–∏-–ª–∏—Å—Ç–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
	#users_files_timeline - —Å–≤—è—â–µ–Ω–Ω—ã–π —Ç–∞–π–º–ª–∞–π–Ω –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–∞—Ç–∞–ª–æ–≥–∞—Ö
	#users_cfgs - —Ç–µ–∫—Å—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	#virt_apps_file - –∏–Ω—Ñ–∞ –ø–æ –≤–∏—Ä—Ç—É–∞–ª–∫–∞–º –∏–ª–∏ –≤–∞–π–Ω–∞–º, –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º –û–° –≤ —Å–∏—Å—Ç–µ–º–µ
	#secur_cfg - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∞—É–¥–∏—Ç, –æ—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤, SELinux, AppArmor)
	#susp_chk - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—á–µ–Ω—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∞—Ç–∞–∫—É—é—â–∏—Ö –≤ —Å–∏—Å—Ç–µ–º–µ
	#junk_k_info - –≤—ã–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ –ò–ë-–≤–µ–Ω–¥–æ—Ä–∞
	#dmesg - –≤—ã–≤–æ–¥ dmesg
	#kernel_params - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —è–¥—Ä–∞ –∏ –º–æ–¥—É–ª–∏
	#rc_scripts - –ª–∏—Å—Ç–∏–Ω–≥ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–∑ –∞–≤—Ç–æ–∑–∞—Ä—É—Å–∫–∞ –≤ /etc/rc*
	#journalctlq - –≤—ã–≥—Ä—É–∑–∫–∞ journalctl
